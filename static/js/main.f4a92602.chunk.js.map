{"version":3,"sources":["core/context/PanelRoutings/PanelRoutings.context.js","core/context/PanelRoutings/PanelRoutings.provider.jsx","shared/constants/index.js","panels/Start/Start.jsx","core/components/Keyboard/components/KeyboardButton/KeyboardButton.jsx","core/components/Keyboard/Keyboard.jsx","core/components/RoulleteKeyboard/components/Roullete/Roullete.jsx","shared/hooks/useTouch/useTouch.js","assets/icons/index.js","shared/utils/index.js","core/components/RoulleteKeyboard/RoulleteKeyboard.jsx","panels/GameArea/GameArea.jsx","core/LayoutsGenerator/LyaoutsGenerator.js","panels/index.js","routing/Routing.jsx","App.js","index.js","assets/icons/shift.svg","assets/icons/backSpace.svg"],"names":["PanelRoutingsContext","createContext","activePanel","params","setActivePanel","panelName","setParams","PanelRoutingsProvider","children","useState","Provider","value","GAME_TYPES","Start","id","useContext","handleChangeKeyboard","gameType","PANEL_NAMES","gameArea","onClick","expandable","KeyboardButton","props","touchHelp","setTouchHelp","className","onTouchStart","onTouchEnd","Keyboard","onChange","show","keyboardLayout","classes","useMemo","cn","handleClick","keyObject","type","actionType","updatedValue","slice","length","map","row","i","key","rowKey","Roullete","layout","startPos","config","initialConfig","startX","startY","translateX","translateY","transition","stateStartX","setStateStartX","stateStartY","setStateStartY","stateTranslateX","setStateTranslateX","stateTranslateY","setStateTranslateY","stateTransition","setStateTransition","addTransitionAnimation","useCallback","cb","transX","transY","delay","promiseAnimation","Promise","resolve","timeout","setTimeout","then","clearTimeout","handleTouchStart","event","touches","clientX","clientY","handleTouchMove","diffY","handleTouchEnd","useTouch","oldY","setOldY","useEffect","lengthLayoutLent","dragStyle","transform","keyObj","keyId","style","onTouchMove","diff","ShiftIcon","src","ShiftSVG","alt","BackSpaceIcon","BackSpaceSVG","getRandomInt","min","max","Math","ceil","floor","random","timerSelfDestroy","ALPHABET","RoulleteKeyboard","handleChange","replace","GameArea","showKeyboard","setShowKeyboard","typedText","setTypedText","typeLayoutId","setTypeLayoutId","gameTiming","setGameTimnig","result","setResult","layoutId","layoutTypeId","DEFAULT_LAYOUT","reverse","firstRow","secondRow","thridRow","splice","generateLayout","resultGroup","header","mode","keyboard","left","start","Routing","RoutingWithProviders","App","bridge","send","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f4a92602.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const PanelRoutingsContext = createContext({\r\n    activePanel: 'gameArea',\r\n    params: {},\r\n    setActivePanel: (panelName) => {},\r\n    setParams: (params) => {}\r\n})","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { PanelRoutingsContext } from \"./PanelRoutings.context\";\r\n\r\nexport const PanelRoutingsProvider = ({ children }) => {\r\n    const [activePanel, setActivePanel] = useState('start');\r\n    const [params, setParams] = useState({});\r\n\r\n    return (\r\n        <PanelRoutingsContext.Provider value={{ activePanel, setActivePanel, params, setParams }}>\r\n            {children}\r\n        </PanelRoutingsContext.Provider>\r\n    )\r\n}","export const GAME_TYPES = {\r\n    initialRandom: 'initialRandom',\r\n    dinamycRandom: 'dinamycRandom',\r\n    roulletKeyboard: 'roulletKeyboard',\r\n    default: 'default'\r\n}\r\n\r\nexport const MAX_LAYOUTS = 5;","import React, { useContext } from \"react\";\r\nimport { Panel, Group, SimpleCell, Header, PanelHeader } from \"@vkontakte/vkui\";\r\n\r\nimport { PanelRoutingsContext } from \"../../core/context\";\r\nimport { GAME_TYPES } from \"../../shared/constants\";\r\nimport { PANEL_NAMES } from \"../\";\r\n\r\nexport const Start = ({ id }) => {\r\n    const { setActivePanel, setParams } = useContext(PanelRoutingsContext);\r\n\r\n    const handleChangeKeyboard = (gameType) => {\r\n        setActivePanel(PANEL_NAMES.gameArea);\r\n        setParams({ gameType });\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n           <PanelHeader>Выбор этапа</PanelHeader>\r\n           <Group>\r\n                <Header>Вид клавиатуры</Header>\r\n\r\n                <SimpleCell \r\n                    onClick={() => handleChangeKeyboard(GAME_TYPES.dinamycRandom)} \r\n                    expandable\r\n                >Динамическая (по времени)</SimpleCell>\r\n\r\n                <SimpleCell \r\n                    onClick={() => handleChangeKeyboard(GAME_TYPES.initialRandom)} \r\n                    expandable\r\n                >Динамическая (при инициализации)</SimpleCell>\r\n                \r\n                <SimpleCell \r\n                    onClick={() => handleChangeKeyboard(GAME_TYPES.roulletKeyboard)} \r\n                    expandable\r\n                >Рулетка</SimpleCell>\r\n\r\n                <SimpleCell \r\n                    onClick={() => handleChangeKeyboard(GAME_TYPES.default)} \r\n                    expandable\r\n                >Стандартная</SimpleCell>\r\n           </Group>\r\n        </Panel>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nexport const KeyboardButton = (props) => {\r\n    const { onClick, children } = props;\r\n    \r\n    const [touchHelp, setTouchHelp] = useState(null);\r\n\r\n    const handleTouchStart = () => {\r\n        setTouchHelp(<span>{children}</span>);\r\n    }\r\n\r\n    const hanldeTouchEnd = () => {\r\n        setTouchHelp(null);\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"keyboard-key\"\r\n            onClick={onClick}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchEnd={hanldeTouchEnd}\r\n        >\r\n            {touchHelp}\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, { useMemo } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./style.scss\";\r\nimport { KeyboardButton } from \"./components\";\r\n\r\nexport const Keyboard = (props) => {\r\n    const { onChange, value, show, keyboardLayout } = props;\r\n\r\n    const classes = useMemo(() => cn({\r\n        'keyboard': true,\r\n        'keyboard-show': show\r\n    }), [show])\r\n\r\n    const handleClick = (keyObject) => {\r\n        if (keyObject.type === \"char\") {\r\n            return onChange(value + keyObject.value);\r\n        }\r\n\r\n        if (keyObject.type === \"action\") {\r\n            const { actionType } = keyObject;\r\n            \r\n            // Добавить реализацию для действий\r\n            switch(actionType) {\r\n                case 'backSpace':\r\n                    const updatedValue = value.slice(0, value.length - 1);\r\n                    onChange(updatedValue);\r\n                    break;\r\n                \r\n                case 'shift':\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes}>\r\n            {keyboardLayout.map((row, i) => (\r\n                <div className=\"keyboard-row\" key={`row-${i}`}>\r\n                    {row.map((rowKey, i) => (\r\n                        <KeyboardButton\r\n                            onClick={() => handleClick(rowKey)}\r\n                            key={`${rowKey.value}-${rowKey.type}-${i}`}\r\n                        >\r\n                            {rowKey.value}\r\n                        </KeyboardButton>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <div className=\"keyboard-row keyboard-row-bottom\">\r\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\r\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\r\n                <KeyboardButton onClick={() => handleClick({ type: \"char\", value: \",\" })}>,</KeyboardButton>\r\n                <button \r\n                    className=\"keyboard-key keyboard-key-space\"\r\n                    onClick={() => handleClick({ type: \"char\", value: \" \" })}\r\n                ></button>\r\n                <KeyboardButton onClick={() => handleClick({ type: \"char\", value: \".\" })}>.</KeyboardButton>\r\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\r\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useMemo, useState, useEffect } from \"react\";\r\n\r\nimport \"./style.scss\";\r\nimport { useTouch } from \"../../../../../shared/hooks\";\r\n\r\nexport const Roullete = (props) => {\r\n  const { layout, onClick, startPos } = props;\r\n  \r\n  const {\r\n    stateTranslateY,\r\n    stateTransition,\r\n\r\n    setStateTranslateY,\r\n    addTransitionAnimation,\r\n\r\n    handleTouchStart,\r\n    handleTouchMove,\r\n    handleTouchEnd\r\n  } = useTouch({ startY: 84 });\r\n\r\n  const [oldY, setOldY] = useState(84);\r\n\r\n  useEffect(() => {\r\n    if (!!startPos) {\r\n      setStateTranslateY(84 - (startPos * 62));\r\n    } else {\r\n      setStateTranslateY(84);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const lengthLayoutLent = useMemo(() => (62 * (layout.length - 1)) - 84, [layout]);\r\n\r\n  const handleDragEnd = () => {\r\n    if (stateTranslateY > -lengthLayoutLent && stateTranslateY < 84) {\r\n      const diff = (stateTranslateY - 84) % 62;\r\n\r\n      if (oldY > stateTranslateY) {\r\n        setOldY(stateTranslateY - (diff + 84));\r\n        addTransitionAnimation();\r\n        return setStateTranslateY(stateTranslateY - (diff + 62)); \r\n      } \r\n\r\n      if (oldY < stateTranslateY) {\r\n        setOldY(stateTranslateY - diff);\r\n        addTransitionAnimation();\r\n        return setStateTranslateY(stateTranslateY - diff);\r\n      }\r\n    }\r\n\r\n    if (stateTranslateY > 84) {\r\n      setOldY(84);\r\n      addTransitionAnimation();\r\n      return setStateTranslateY(84);\r\n    }\r\n\r\n    if (stateTranslateY < -lengthLayoutLent) {\r\n      setOldY(-lengthLayoutLent);\r\n      addTransitionAnimation();\r\n      return setStateTranslateY(-lengthLayoutLent);\r\n    }\r\n  }\r\n\r\n  const dragStyle = useMemo(() => ({\r\n    transform: `translateY(${stateTranslateY}px)`,\r\n    transition : stateTransition ? \"all .3s\" : \"none\"\r\n  }), [stateTranslateY])\r\n\r\n  const handleClick = (keyObj, keyId) => {\r\n    const currentFocusId = -(stateTranslateY - 84) / 62;\r\n\r\n    if (keyId === currentFocusId) {\r\n      onClick(keyObj);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"roullete\" \r\n      style={dragStyle}\r\n      onTouchStart={handleTouchStart()}\r\n      onTouchMove={handleTouchMove()}\r\n      onTouchEnd={handleTouchEnd(handleDragEnd)}\r\n    >\r\n      {layout.map((keyObj, i) => (\r\n        <div \r\n          className=\"roullete-key\" \r\n          key={`${keyObj.value}-${i}`}\r\n          onClick={() => handleClick(keyObj, i)}\r\n        >\r\n          <span>\r\n            {keyObj.value}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}","import { useState, useCallback } from \"react\";\r\n\r\nexport const useTouch = (config) => {\r\n  let initialConfig = { startX: 0, startY: 0, translateX: 0, translateY: 0, transition: false };\r\n  if (!!config) initialConfig = { ...initialConfig, ...config };\r\n  const { startX, startY, translateX, translateY, transition } = initialConfig;\r\n\r\n  const [stateStartX, setStateStartX] = useState(startX);\r\n  const [stateStartY, setStateStartY] = useState(startY);\r\n  const [stateTranslateX, setStateTranslateX] = useState(translateX);\r\n  const [stateTranslateY, setStateTranslateY] = useState(translateY);\r\n  const [stateTransition, setStateTransition] = useState(transition);\r\n\r\n  const addTransitionAnimation = useCallback((cb, transX = translateX, transY = translateY, delay = 400) => {\r\n    const promiseAnimation = new Promise((resolve) => {\r\n      setStateTransition(true);\r\n        setStateTranslateY(transY);\r\n        setStateTranslateX(transX);\r\n\r\n        !!cb && cb();\r\n\r\n        const timeout = setTimeout(() => {\r\n            resolve(timeout);\r\n        }, delay);\r\n    })\r\n\r\n    promiseAnimation\r\n        .then((timeout) => {\r\n            clearTimeout(timeout);\r\n            setStateTransition(false);\r\n        })\r\n  }, [])\r\n\r\n  const handleTouchStart = useCallback((cb) => (event) => {\r\n    const { touches } = event;\r\n    const { clientX, clientY } = touches[0];\r\n\r\n    !!cb && cb();\r\n\r\n    setStateStartX(clientX);\r\n    setStateStartY(clientY);\r\n  }, [setStateStartX, setStateStartY])\r\n\r\n  const handleTouchMove = useCallback((cb) => (event) => {\r\n    const { touches } = event;\r\n    const { clientX, clientY } = touches[0];\r\n\r\n    const diffX = clientX - stateStartX;\r\n    const diffY = clientY - stateStartY;\r\n\r\n    setStateTranslateX(stateTranslateX + diffX);\r\n    setStateTranslateY(stateTranslateY + diffY);\r\n\r\n    !!cb && cb();\r\n  }, [stateStartX, stateStartY, setStateTranslateX, setStateTranslateY])\r\n\r\n  const handleTouchEnd = (cb) => (event) => {\r\n    !!cb && cb();\r\n  }\r\n\r\n  return {\r\n    handleTouchStart,\r\n    handleTouchMove,\r\n    handleTouchEnd,\r\n    addTransitionAnimation,\r\n    \r\n    setStateTranslateX,\r\n    setStateTranslateY,\r\n    setStateTransition,\r\n\r\n    stateStartX,\r\n    stateStartY,\r\n    stateTranslateX,\r\n    stateTranslateY,\r\n    stateTransition\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport ShiftSVG from \"./shift.svg\";\r\nimport BackSpaceSVG from \"./backSpace.svg\";\r\n\r\nexport const ShiftIcon = <img src={ShiftSVG} alt=\"shift\" />;\r\nexport const BackSpaceIcon = <img src={BackSpaceSVG} alt=\"backspace\" />\r\n","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport const timerSelfDestroy = (delay, cb) => {\r\n    const timeout = setTimeout(() => {\r\n        cb();\r\n        clearTimeout(timeout);\r\n    }, delay);\r\n}","import React, { useMemo } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./style.scss\";\r\nimport { Roullete } from \"./components\";\r\nimport { BackSpaceIcon } from \"../../../assets/icons\";\r\nimport { getRandomInt } from \"../../../shared/utils\";\r\n\r\nconst ALPHABET = [\r\n  {value: 'а', type: 'char'}, {value: 'б', type: 'char'}, {value: 'в', type: 'char'}, {value: 'г', type: 'char'}, \r\n  {value: 'д', type: 'char'}, {value: 'е', type: 'char'}, {value: 'ё', type: 'char'}, {value: 'ж', type: 'char'}, \r\n  {value: 'з', type: 'char'}, {value: 'и', type: 'char'}, {value: 'й', type: 'char'}, {value: 'к', type: 'char'}, \r\n  {value: 'л', type: 'char'}, {value: 'м', type: 'char'}, {value: 'н', type: 'char'}, {value: 'о', type: 'char'},\r\n  {value: 'п', type: 'char'}, {value: 'р', type: 'char'}, {value: 'с', type: 'char'}, {value: 'т', type: 'char'},\r\n  {value: 'у', type: 'char'}, {value: 'ф', type: 'char'}, {value: 'х', type: 'char'}, {value: 'ц', type: 'char'},\r\n  {value: 'ч', type: 'char'}, {value: 'ш', type: 'char'}, {value: 'щ', type: 'char'}, {value: 'ъ', type: 'char'},\r\n  {value: 'ы', type: 'char'}, {value: 'ь', type: 'char'}, {value: 'э', type: 'char'}, {value: 'ю', type: 'char'},\r\n  {value: 'я', type: 'char'}\r\n]\r\n\r\nexport const RoulleteKeyboard = (props) => {\r\n  const { onChange, value, show } = props;\r\n\r\n  const handleChange = (keyObj) => {\r\n    if (keyObj.type === 'char') {\r\n      return onChange(value + keyObj.value.replace('_', ' '));\r\n    }\r\n\r\n    if (keyObj.type === \"action\") {\r\n      const { actionType } = keyObj;\r\n      \r\n      // Добавить реализацию для действий\r\n      switch(actionType) {\r\n          case 'backSpace':\r\n              const updatedValue = value.slice(0, value.length - 1);\r\n              onChange(updatedValue);\r\n              break;\r\n          \r\n          case 'shift':\r\n              break;\r\n      }\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  const classes = useMemo(() => cn({\r\n    'roullete-keyboard': true,\r\n    'roullete-keyboard-show': show\r\n  }), [show])\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"line line-top\"></div>\r\n      <div className=\"line line-bottom\"></div>\r\n      <Roullete layout={[{value: '_', type: 'char'}]} onClick={handleChange} />\r\n      <Roullete layout={ALPHABET} onClick={handleChange} startPos={getRandomInt(0, ALPHABET.length - 1)} />\r\n      <Roullete layout={ALPHABET} onClick={handleChange} startPos={getRandomInt(0, ALPHABET.length - 1)} />\r\n      <Roullete layout={ALPHABET} onClick={handleChange} startPos={getRandomInt(0, ALPHABET.length - 1)} />\r\n      <Roullete layout={[{ type: \"action\", actionType: \"backSpace\", value: BackSpaceIcon }]} onClick={handleChange} />\r\n    </div>\r\n  )\r\n}","import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Group, Header } from \"@vkontakte/vkui\";\r\n\r\nimport { PanelRoutingsContext } from \"../../core/context\";\r\nimport { Keyboard, RoulleteKeyboard } from \"../../core/components\";\r\nimport { generateLayout } from \"../../core/LayoutsGenerator\";\r\nimport { PANEL_NAMES } from \"../\";\r\nimport { GAME_TYPES, MAX_LAYOUTS } from \"../../shared/constants\";\r\nimport { getRandomInt, timerSelfDestroy } from \"../../shared/utils\";\r\n\r\nexport const GameArea = ({ id }) => {\r\n    const { setActivePanel, params } = useContext(PanelRoutingsContext);\r\n    const { gameType } = params;\r\n\r\n    const [showKeyboard, setShowKeyboard] = useState(true);\r\n    const [typedText, setTypedText] = useState('');\r\n    const [typeLayoutId, setTypeLayoutId] = useState(0);\r\n\r\n    // for fix timing\r\n    const [gameTiming, setGameTimnig] = useState(0);\r\n    \r\n    const [result, setResult] = useState('');\r\n\r\n    const handleBack = () => {\r\n        setActivePanel(PANEL_NAMES.start);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const layoutId = getRandomInt(1, MAX_LAYOUTS);\r\n        setTypeLayoutId(layoutId);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (gameType === GAME_TYPES.dinamycRandom) {\r\n            timerSelfDestroy(1000, () => {\r\n                if (gameTiming % 2 === 0) {\r\n                    setTypeLayoutId(getRandomInt(1, MAX_LAYOUTS));\r\n                }\r\n                setGameTimnig(gameTiming + 1);\r\n            });\r\n        }\r\n\r\n        if (gameType === GAME_TYPES.initialRandom) {\r\n            if (typeLayoutId === 0) {\r\n                setTypeLayoutId(getRandomInt(1, MAX_LAYOUTS));\r\n            }\r\n\r\n            timerSelfDestroy(1000, () => {\r\n                setGameTimnig(gameTiming + 1);\r\n            });\r\n        }\r\n\r\n        if (gameType === GAME_TYPES.roulletKeyboard) {\r\n            timerSelfDestroy(1000, () => {\r\n                setGameTimnig(gameTiming + 1);\r\n            });\r\n        }\r\n       \r\n    }, [gameTiming])\r\n\r\n    useEffect(() => {\r\n        if (typedText === \"привет\" && result.length === 0) {\r\n            setResult(`Вы написали \"привет\" за ${gameTiming} секунд`)\r\n            setShowKeyboard(false);\r\n        }\r\n    }, [typedText, gameTiming])\r\n\r\n    const layout = useMemo(() => generateLayout(typeLayoutId), [typeLayoutId]);\r\n\r\n    const resultGroup = useMemo(() => !!result.length && (\r\n        <Group header={<Header mode=\"secondary\">Результат</Header>}>\r\n            <Div>{result}</Div>\r\n        </Group>\r\n    ), [result.length])\r\n    \r\n    const keyboard = useMemo(() => {\r\n        if (gameType === GAME_TYPES.roulletKeyboard) {\r\n            return <RoulleteKeyboard show={showKeyboard} onChange={setTypedText} value={typedText} />\r\n        }\r\n\r\n        return (\r\n            <Keyboard \r\n                onChange={setTypedText} \r\n                value={typedText}\r\n                keyboardLayout={layout}\r\n                show={showKeyboard}\r\n            />\r\n        )\r\n    }, [setTypedText, typedText, layout, showKeyboard, gameType])\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderBack onClick={handleBack} />}\r\n            >Игра</PanelHeader>\r\n            \r\n            <Group header={<Header mode=\"secondary\">Напишите \"привет\"</Header>}>\r\n                <Div>{typedText}</Div>\r\n            </Group>\r\n\r\n            {resultGroup}\r\n            \r\n            {keyboard}\r\n        </Panel>\r\n    )\r\n}","import React from \"react\";\r\n\r\nimport { ShiftIcon, BackSpaceIcon } from \"../../assets/icons\";\r\n\r\nexport const generateLayout = (layoutTypeId) => {\r\n    const DEFAULT_LAYOUT = [\r\n        [\r\n            { type: \"char\", value: \"й\" }, \r\n            { type: \"char\", value: \"ц\" }, \r\n            { type: \"char\", value: \"у\" }, \r\n            { type: \"char\", value: \"к\" },\r\n            { type: \"char\", value: \"е\" }, \r\n            { type: \"char\", value: \"н\" },\r\n            { type: \"char\", value: \"г\" },\r\n            { type: \"char\", value: \"ш\" }, \r\n            { type: \"char\", value: \"щ\" }, \r\n            { type: \"char\", value: \"з\" }, \r\n            { type: \"char\", value: \"х\" }\r\n        ],\r\n        [\r\n            { type: \"char\", value: \"ф\" }, \r\n            { type: \"char\", value: \"ы\" }, \r\n            { type: \"char\", value: \"в\" }, \r\n            { type: \"char\", value: \"а\" },\r\n            { type: \"char\", value: \"п\" }, \r\n            { type: \"char\", value: \"р\" },\r\n            { type: \"char\", value: \"о\" },\r\n            { type: \"char\", value: \"л\" }, \r\n            { type: \"char\", value: \"д\" }, \r\n            { type: \"char\", value: \"ж\" }, \r\n            { type: \"char\", value: \"э\" }\r\n        ],\r\n        [\r\n            { type: \"action\", actionType: \"shift\", value: ShiftIcon }, \r\n            { type: \"char\", value: \"я\" }, \r\n            { type: \"char\", value: \"ч\" }, \r\n            { type: \"char\", value: \"с\" },\r\n            { type: \"char\", value: \"м\" }, \r\n            { type: \"char\", value: \"и\" },\r\n            { type: \"char\", value: \"т\" },\r\n            { type: \"char\", value: \"ь\" }, \r\n            { type: \"char\", value: \"б\" }, \r\n            { type: \"char\", value: \"ю\" }, \r\n            { type: \"action\", actionType: \"backSpace\", value: BackSpaceIcon }\r\n        ]\r\n    ]\r\n\r\n    if (layoutTypeId === 0) {\r\n        return DEFAULT_LAYOUT;\r\n    }\r\n\r\n    if (layoutTypeId === 1) {\r\n        return DEFAULT_LAYOUT.reverse();\r\n    } \r\n\r\n    if (layoutTypeId === 2) {\r\n        return DEFAULT_LAYOUT.map((row) => row.reverse()).reverse();\r\n    }\r\n\r\n    if (layoutTypeId === 3) {\r\n        const firstRow = DEFAULT_LAYOUT[0];\r\n        const secondRow = DEFAULT_LAYOUT[1];\r\n        const thridRow = DEFAULT_LAYOUT[2];\r\n\r\n        return [secondRow, thridRow, firstRow];\r\n    }\r\n\r\n    if (layoutTypeId === 4) {\r\n        const firstRow = DEFAULT_LAYOUT[0];\r\n        const secondRow = DEFAULT_LAYOUT[1];\r\n        const thridRow = DEFAULT_LAYOUT[2];\r\n\r\n        return [secondRow.reverse(), thridRow, firstRow.reverse()];\r\n    }\r\n\r\n    if (layoutTypeId === 5) {\r\n        const firstRow = DEFAULT_LAYOUT[0];\r\n        const secondRow = DEFAULT_LAYOUT[1];\r\n        const thridRow = DEFAULT_LAYOUT[2];\r\n\r\n        return [\r\n            [...firstRow.splice(0, 6), ...thridRow.splice(6, thridRow.length)],\r\n            [...thridRow, ...firstRow],\r\n            secondRow\r\n        ];\r\n    }\r\n}\r\n","export { Start } from \"./Start\";\r\nexport { GameArea } from \"./GameArea\";\r\n\r\nexport const PANEL_NAMES = {\r\n    start: 'start',\r\n    gameArea: 'gameArea'\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { PanelHeader, Panel, View } from \"@vkontakte/vkui\"\r\n\r\nimport { PanelRoutingsProvider, PanelRoutingsContext } from \"../core/context\";\r\nimport { Start, GameArea, PANEL_NAMES } from \"../panels\";\r\n\r\nconst Routing = () => {\r\n    const { activePanel } = useContext(PanelRoutingsContext);\r\n\r\n    return (\r\n        <View activePanel={activePanel}>\r\n            <Start id={PANEL_NAMES.start} />\r\n            <GameArea id={PANEL_NAMES.gameArea} />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport const RoutingWithProviders = () => (\r\n    <PanelRoutingsProvider>\r\n        <Routing />\r\n    </PanelRoutingsProvider>\r\n)","import React from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport { RoutingWithProviders } from \"./routing\";\r\n\r\nconst App = () => <RoutingWithProviders />\r\n\r\nexport default App;\r\n\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/shift.df9919d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/backSpace.e0a1db54.svg\";"],"sourceRoot":""}