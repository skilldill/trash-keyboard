{"version":3,"sources":["core/context/PanelRoutings/PanelRoutings.context.js","core/context/PanelRoutings/PanelRoutings.provider.jsx","shared/constants/index.js","panels/Start/Start.jsx","core/components/components/KeyboardButton/KeyboardButton.jsx","core/components/Keyboard/Keyboard.jsx","assets/icons/index.js","shared/utils/index.js","panels/GameArea/GameArea.jsx","core/LayoutsGenerator/LyaoutsGenerator.js","panels/index.js","routing/Routing.jsx","App.js","index.js","assets/icons/shift.svg","assets/icons/backSpace.svg"],"names":["PanelRoutingsContext","createContext","activePanel","params","setActivePanel","panelName","setParams","PanelRoutingsProvider","children","useState","Provider","value","GAME_TYPES","Start","id","useContext","handleChangeKeyboard","gameType","PANEL_NAMES","gameArea","onClick","expandable","KeyboardButton","props","touchHelp","setTouchHelp","className","onTouchStart","onTouchEnd","Keyboard","onChange","show","keyboardLayout","classes","useMemo","cn","handleClick","keyObject","type","actionType","updatedValue","slice","length","map","row","i","key","rowKey","ShiftIcon","src","ShiftSVG","alt","BackSpaceIcon","BackSpaceSVG","getRandomInt","min","max","Math","ceil","floor","random","timerSelfDestroy","delay","cb","timeout","setTimeout","clearTimeout","GameArea","showKeyboard","setShowKeyboard","typedText","setTypedText","typeLayoutId","setTypeLayoutId","gameTiming","setGameTimnig","result","setResult","useEffect","layoutId","layout","layoutTypeId","DEFAULT_LAYOUT","reverse","firstRow","secondRow","thridRow","splice","generateLayout","left","start","header","mode","Routing","RoutingWithProviders","App","bridge","send","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3498a5a5.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const PanelRoutingsContext = createContext({\n    activePanel: 'gameArea',\n    params: {},\n    setActivePanel: (panelName) => {},\n    setParams: (params) => {}\n})","import React, { useState, useEffect } from \"react\";\n\nimport { PanelRoutingsContext } from \"./PanelRoutings.context\";\n\nexport const PanelRoutingsProvider = ({ children }) => {\n    const [activePanel, setActivePanel] = useState('start');\n    const [params, setParams] = useState({});\n\n    return (\n        <PanelRoutingsContext.Provider value={{ activePanel, setActivePanel, params, setParams }}>\n            {children}\n        </PanelRoutingsContext.Provider>\n    )\n}","export const GAME_TYPES = {\n    initialRandom: 'initialRandom',\n    dinamycRandom: 'dinamycRandom',\n    roulletKeyboard: 'roulletKeyboard',\n    default: 'default'\n}","import React, { useContext } from \"react\";\nimport { Panel, Group, SimpleCell, Header, PanelHeader } from \"@vkontakte/vkui\";\n\nimport { PanelRoutingsContext } from \"../../core/context\";\nimport { GAME_TYPES } from \"../../shared/constants\";\nimport { PANEL_NAMES } from \"../\";\n\nexport const Start = ({ id }) => {\n    const { setActivePanel, setParams } = useContext(PanelRoutingsContext);\n\n    const handleChangeKeyboard = (gameType) => {\n        setActivePanel(PANEL_NAMES.gameArea);\n        setParams({ gameType });\n    }\n\n    return (\n        <Panel id={id}>\n           <PanelHeader>Выбор этапа</PanelHeader>\n           <Group>\n                <Header>Вид клавиатуры</Header>\n\n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.dinamycRandom)} \n                    expandable\n                >Динамическая (по времени)</SimpleCell>\n\n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.initialRandom)} \n                    expandable\n                >Динамическая (при инициализации)</SimpleCell>\n                \n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.roulletKeyboard)} \n                    expandable\n                >Рулетка</SimpleCell>\n\n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.default)} \n                    expandable\n                >Стандартная</SimpleCell>\n           </Group>\n        </Panel>\n    )\n}","import React, { useState } from \"react\";\n\nexport const KeyboardButton = (props) => {\n    const { onClick, children } = props;\n    \n    const [touchHelp, setTouchHelp] = useState(null);\n\n    const handleTouchStart = () => {\n        setTouchHelp(<span>{children}</span>);\n    }\n\n    const hanldeTouchEnd = () => {\n        setTouchHelp(null);\n    }\n\n    return (\n        <button\n            className=\"keyboard-key\"\n            onClick={onClick}\n            onTouchStart={handleTouchStart}\n            onTouchEnd={hanldeTouchEnd}\n        >\n            {touchHelp}\n            {children}\n        </button>\n    )\n}","import React, { useMemo } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./style.scss\";\nimport { KeyboardButton } from \"../components\";\n\nexport const Keyboard = (props) => {\n    const { onChange, value, show, keyboardLayout } = props;\n\n    const classes = useMemo(() => cn({\n        'keyboard': true,\n        'keyboard-show': show\n    }), [show])\n\n    const handleClick = (keyObject) => {\n        if (keyObject.type === \"char\") {\n            return onChange(value + keyObject.value);\n        }\n\n        if (keyObject.type === \"action\") {\n            const { actionType } = keyObject;\n            \n            // Добавить реализацию для действий\n            switch(actionType) {\n                case 'backSpace':\n                    const updatedValue = value.slice(0, value.length - 1);\n                    onChange(updatedValue);\n                    break;\n                \n                case 'shift':\n                    break;\n            }\n\n            return;\n        }\n    }\n\n    return (\n        <div className={classes}>\n            {keyboardLayout.map((row, i) => (\n                <div className=\"keyboard-row\" key={`row-${i}`}>\n                    {row.map((rowKey, i) => (\n                        <KeyboardButton\n                            onClick={() => handleClick(rowKey)}\n                            key={`${rowKey.value}-${rowKey.type}-${i}`}\n                        >\n                            {rowKey.value}\n                        </KeyboardButton>\n                    ))}\n                </div>\n            ))}\n            <div className=\"keyboard-row keyboard-row-bottom\">\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n                <KeyboardButton onClick={() => handleClick({ type: \"char\", value: \",\" })}>,</KeyboardButton>\n                <button \n                    className=\"keyboard-key keyboard-key-space\"\n                    onClick={() => handleClick({ type: \"char\", value: \" \" })}\n                ></button>\n                <KeyboardButton onClick={() => handleClick({ type: \"char\", value: \".\" })}>.</KeyboardButton>\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\n\nimport ShiftSVG from \"./shift.svg\";\nimport BackSpaceSVG from \"./backSpace.svg\";\n\nexport const ShiftIcon = <img src={ShiftSVG} alt=\"shift\" />;\nexport const BackSpaceIcon = <img src={BackSpaceSVG} alt=\"backspace\" />\n","export function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const timerSelfDestroy = (delay, cb) => {\n    const timeout = setTimeout(() => {\n        cb();\n        clearTimeout(timeout);\n    }, delay);\n}","import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Group, Header } from \"@vkontakte/vkui\";\n\nimport { PanelRoutingsContext } from \"../../core/context\";\nimport { Keyboard } from \"../../core/components\";\nimport { generateLayout } from \"../../core/LayoutsGenerator\";\nimport { PANEL_NAMES } from \"../\";\nimport { GAME_TYPES } from \"../../shared/constants\";\nimport { getRandomInt, timerSelfDestroy } from \"../../shared/utils\";\n\nexport const GameArea = ({ id }) => {\n    const { setActivePanel, params } = useContext(PanelRoutingsContext);\n    const { gameType } = params;\n\n    const [showKeyboard, setShowKeyboard] = useState(true);\n    const [typedText, setTypedText] = useState('');\n    const [typeLayoutId, setTypeLayoutId] = useState(0);\n\n    // for fix timing\n    const [gameTiming, setGameTimnig] = useState(0);\n    \n    const [result, setResult] = useState('');\n\n    const handleBack = () => {\n        setActivePanel(PANEL_NAMES.start);\n    }\n\n    useEffect(() => {\n        const layoutId = getRandomInt(1, 5);\n        setTypeLayoutId(layoutId);\n    }, [])\n\n    useEffect(() => {\n        if (gameType === GAME_TYPES.dinamycRandom) {\n            timerSelfDestroy(1000, () => {\n                if (gameTiming % 2 === 0) {\n                    setTypeLayoutId(getRandomInt(1, 5));\n                }\n                setGameTimnig(gameTiming + 1);\n            });\n        }\n\n        if (gameType === GAME_TYPES.initialRandom) {\n            if (typeLayoutId === 0) {\n                setTypeLayoutId(getRandomInt(1, 5));\n            }\n\n            timerSelfDestroy(1000, () => {\n                setGameTimnig(gameTiming + 1);\n            });\n        }\n       \n    }, [gameTiming])\n\n    useEffect(() => {\n        if (typedText === \"привет\" && result.length === 0) {\n            setResult(`Вы написали \"привет\" за ${gameTiming} секунд`)\n            setShowKeyboard(false);\n        }\n    }, [typedText, gameTiming])\n\n    const layout = useMemo(() => generateLayout(typeLayoutId), [typeLayoutId]);\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<PanelHeaderBack onClick={handleBack} />}\n            >Игра</PanelHeader>\n            <Group header={<Header mode=\"secondary\">Напишите \"привет\"</Header>}>\n                <Div>{typedText}</Div>\n            </Group>\n            {!!result.length && (\n                <Group header={<Header mode=\"secondary\">Результат</Header>}>\n                    <Div>{result}</Div>\n                </Group>)\n            }\n            <Keyboard \n                onChange={setTypedText} \n                value={typedText}\n                keyboardLayout={layout}\n                show={showKeyboard}\n            />\n        </Panel>\n    )\n}","import React from \"react\";\n\nimport { ShiftIcon, BackSpaceIcon } from \"../../assets/icons\";\n\nexport const generateLayout = (layoutTypeId) => {\n    const DEFAULT_LAYOUT = [\n        [\n            { type: \"char\", value: \"й\" }, \n            { type: \"char\", value: \"ц\" }, \n            { type: \"char\", value: \"у\" }, \n            { type: \"char\", value: \"к\" },\n            { type: \"char\", value: \"е\" }, \n            { type: \"char\", value: \"н\" },\n            { type: \"char\", value: \"г\" },\n            { type: \"char\", value: \"ш\" }, \n            { type: \"char\", value: \"щ\" }, \n            { type: \"char\", value: \"з\" }, \n            { type: \"char\", value: \"х\" }\n        ],\n        [\n            { type: \"char\", value: \"ф\" }, \n            { type: \"char\", value: \"ы\" }, \n            { type: \"char\", value: \"в\" }, \n            { type: \"char\", value: \"а\" },\n            { type: \"char\", value: \"п\" }, \n            { type: \"char\", value: \"р\" },\n            { type: \"char\", value: \"о\" },\n            { type: \"char\", value: \"л\" }, \n            { type: \"char\", value: \"д\" }, \n            { type: \"char\", value: \"ж\" }, \n            { type: \"char\", value: \"э\" }\n        ],\n        [\n            { type: \"action\", actionType: \"shift\", value: ShiftIcon }, \n            { type: \"char\", value: \"я\" }, \n            { type: \"char\", value: \"ч\" }, \n            { type: \"char\", value: \"с\" },\n            { type: \"char\", value: \"м\" }, \n            { type: \"char\", value: \"и\" },\n            { type: \"char\", value: \"т\" },\n            { type: \"char\", value: \"ь\" }, \n            { type: \"char\", value: \"б\" }, \n            { type: \"char\", value: \"ю\" }, \n            { type: \"action\", actionType: \"backSpace\", value: BackSpaceIcon }\n        ]\n    ]\n\n    if (layoutTypeId === 0) {\n        return DEFAULT_LAYOUT;\n    }\n\n    if (layoutTypeId === 1) {\n        return DEFAULT_LAYOUT.reverse();\n    } \n\n    if (layoutTypeId === 2) {\n        return DEFAULT_LAYOUT.map((row) => row.reverse()).reverse();\n    }\n\n    if (layoutTypeId === 3) {\n        const firstRow = DEFAULT_LAYOUT[0];\n        const secondRow = DEFAULT_LAYOUT[1];\n        const thridRow = DEFAULT_LAYOUT[2];\n\n        return [secondRow, thridRow, firstRow];\n    }\n\n    if (layoutTypeId === 4) {\n        const firstRow = DEFAULT_LAYOUT[0];\n        const secondRow = DEFAULT_LAYOUT[1];\n        const thridRow = DEFAULT_LAYOUT[2];\n\n        return [secondRow.reverse(), thridRow, firstRow.reverse()];\n    }\n\n    if (layoutTypeId === 5) {\n        const firstRow = DEFAULT_LAYOUT[0];\n        const secondRow = DEFAULT_LAYOUT[1];\n        const thridRow = DEFAULT_LAYOUT[2];\n\n        return [\n            [...firstRow.splice(0, 6), ...thridRow.splice(6, thridRow.length)],\n            [...thridRow, ...firstRow],\n            secondRow\n        ];\n    }\n}\n","export { Start } from \"./Start\";\nexport { GameArea } from \"./GameArea\";\n\nexport const PANEL_NAMES = {\n    start: 'start',\n    gameArea: 'gameArea'\n}","import React, { useContext, useEffect } from \"react\";\nimport { PanelHeader, Panel, View } from \"@vkontakte/vkui\"\n\nimport { PanelRoutingsProvider, PanelRoutingsContext } from \"../core/context\";\nimport { Start, GameArea, PANEL_NAMES } from \"../panels\";\n\nconst Routing = () => {\n    const { activePanel } = useContext(PanelRoutingsContext);\n\n    return (\n        <View activePanel={activePanel}>\n            <Start id={PANEL_NAMES.start} />\n            <GameArea id={PANEL_NAMES.gameArea} />\n        </View>\n    )\n}\n\nexport const RoutingWithProviders = () => (\n    <PanelRoutingsProvider>\n        <Routing />\n    </PanelRoutingsProvider>\n)","import React from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport { RoutingWithProviders } from \"./routing\";\n\nconst App = () => <RoutingWithProviders />\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/shift.bd2e35ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/backSpace.b50f4f19.svg\";"],"sourceRoot":""}