{"version":3,"sources":["core/context/PanelRoutings/PanelRoutings.context.js","core/context/PanelRoutings/PanelRoutings.provider.jsx","shared/constants/index.js","panels/Start/Start.jsx","core/components/Keyboard/components/KeyboardButton/KeyboardButton.jsx","core/components/Keyboard/Keyboard.jsx","core/components/RoulleteKeyboard/components/Roullete/Roullete.jsx","shared/hooks/useTouch/useTouch.js","core/components/RoulleteKeyboard/components/Roullete/contants.js","core/components/RoulleteKeyboard/RoulleteKeyboard.jsx","assets/icons/index.js","shared/constants/keyboardLayputs.js","shared/utils/index.js","panels/GameArea/GameArea.jsx","core/LayoutsGenerator/LyaoutsGenerator.js","panels/index.js","routing/Routing.jsx","App.js","index.js","assets/icons/shift.svg","assets/icons/backSpace.svg"],"names":["PanelRoutingsContext","createContext","activePanel","params","setActivePanel","panelName","setParams","PanelRoutingsProvider","children","useState","Provider","value","GAME_TYPES","Start","id","useContext","handleChangeKeyboard","gameType","PANEL_NAMES","gameArea","onClick","expandable","KeyboardButton","props","touchHelp","setTouchHelp","className","onTouchStart","onTouchEnd","Keyboard","onChange","show","keyboardLayout","classes","useMemo","cn","handleClick","keyObject","type","actionType","updatedValue","slice","length","map","row","i","key","rowKey","Roullete","layout","startPos","config","initialConfig","startX","startY","translateX","translateY","transition","stateStartX","setStateStartX","stateStartY","setStateStartY","stateTranslateX","setStateTranslateX","stateTranslateY","setStateTranslateY","stateTransition","setStateTransition","addTransitionAnimation","useCallback","cb","transX","transY","delay","promiseAnimation","Promise","resolve","timeout","setTimeout","then","clearTimeout","handleTouchStart","event","touches","clientX","clientY","handleTouchMove","diffY","handleTouchEnd","useTouch","oldY","setOldY","useEffect","lengthLayoutLent","dragStyle","transform","keyObj","keyId","style","onTouchMove","diff","RoulleteKeyboard","layouts","handleChange","replace","keys","ShiftIcon","src","ShiftSVG","alt","BackSpaceIcon","BackSpaceSVG","ALPHABET","getRandomInt","min","max","Math","ceil","floor","random","timerSelfDestroy","GameArea","showKeyboard","setShowKeyboard","typedText","setTypedText","typeLayoutId","setTypeLayoutId","gameTiming","setGameTimnig","result","setResult","layoutId","layoutTypeId","DEFAULT_LAYOUT","reverse","firstRow","secondRow","thridRow","splice","generateLayout","resultGroup","header","mode","keyboard","left","start","Routing","RoutingWithProviders","App","bridge","send","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d5a73197.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const PanelRoutingsContext = createContext({\n    activePanel: 'gameArea',\n    params: {},\n    setActivePanel: (panelName) => {},\n    setParams: (params) => {}\n})","import React, { useState, useEffect } from \"react\";\n\nimport { PanelRoutingsContext } from \"./PanelRoutings.context\";\n\nexport const PanelRoutingsProvider = ({ children }) => {\n    const [activePanel, setActivePanel] = useState('start');\n    const [params, setParams] = useState({});\n\n    return (\n        <PanelRoutingsContext.Provider value={{ activePanel, setActivePanel, params, setParams }}>\n            {children}\n        </PanelRoutingsContext.Provider>\n    )\n}","export const GAME_TYPES = {\n    initialRandom: 'initialRandom',\n    dinamycRandom: 'dinamycRandom',\n    roulletKeyboard: 'roulletKeyboard',\n    default: 'default'\n}\n\nexport const MAX_LAYOUTS = 5;","import React, { useContext } from \"react\";\nimport { Panel, Group, SimpleCell, Header, PanelHeader } from \"@vkontakte/vkui\";\n\nimport { PanelRoutingsContext } from \"../../core/context\";\nimport { GAME_TYPES } from \"../../shared/constants\";\nimport { PANEL_NAMES } from \"../\";\n\nexport const Start = ({ id }) => {\n    const { setActivePanel, setParams } = useContext(PanelRoutingsContext);\n\n    const handleChangeKeyboard = (gameType) => {\n        setActivePanel(PANEL_NAMES.gameArea);\n        setParams({ gameType });\n    }\n\n    return (\n        <Panel id={id}>\n           <PanelHeader>Выбор этапа</PanelHeader>\n           <Group>\n                <Header>Вид клавиатуры</Header>\n\n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.dinamycRandom)} \n                    expandable\n                >Динамическая (по времени)</SimpleCell>\n\n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.initialRandom)} \n                    expandable\n                >Динамическая (при инициализации)</SimpleCell>\n                \n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.roulletKeyboard)} \n                    expandable\n                >Рулетка</SimpleCell>\n\n                <SimpleCell \n                    onClick={() => handleChangeKeyboard(GAME_TYPES.default)} \n                    expandable\n                >Стандартная</SimpleCell>\n           </Group>\n        </Panel>\n    )\n}","import React, { useState } from \"react\";\n\nexport const KeyboardButton = (props) => {\n    const { onClick, children } = props;\n    \n    const [touchHelp, setTouchHelp] = useState(null);\n\n    const handleTouchStart = () => {\n        setTouchHelp(<span>{children}</span>);\n    }\n\n    const hanldeTouchEnd = () => {\n        setTouchHelp(null);\n    }\n\n    return (\n        <button\n            className=\"keyboard-key\"\n            onClick={onClick}\n            onTouchStart={handleTouchStart}\n            onTouchEnd={hanldeTouchEnd}\n        >\n            {touchHelp}\n            {children}\n        </button>\n    )\n}","import React, { useMemo } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./style.scss\";\nimport { KeyboardButton } from \"./components\";\n\nexport const Keyboard = (props) => {\n    const { onChange, value, show, keyboardLayout } = props;\n\n    const classes = useMemo(() => cn({\n        'keyboard': true,\n        'keyboard-show': show\n    }), [show])\n\n    const handleClick = (keyObject) => {\n        if (keyObject.type === \"char\") {\n            return onChange(value + keyObject.value);\n        }\n\n        if (keyObject.type === \"action\") {\n            const { actionType } = keyObject;\n            \n            // Добавить реализацию для действий\n            switch(actionType) {\n                case 'backSpace':\n                    const updatedValue = value.slice(0, value.length - 1);\n                    onChange(updatedValue);\n                    break;\n                \n                case 'shift':\n                    break;\n            }\n\n            return;\n        }\n    }\n\n    return (\n        <div className={classes}>\n            {keyboardLayout.map((row, i) => (\n                <div className=\"keyboard-row\" key={`row-${i}`}>\n                    {row.map((rowKey, i) => (\n                        <KeyboardButton\n                            onClick={() => handleClick(rowKey)}\n                            key={`${rowKey.value}-${rowKey.type}-${i}`}\n                        >\n                            {rowKey.value}\n                        </KeyboardButton>\n                    ))}\n                </div>\n            ))}\n            <div className=\"keyboard-row keyboard-row-bottom\">\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n                <KeyboardButton onClick={() => handleClick({ type: \"char\", value: \",\" })}>,</KeyboardButton>\n                <button \n                    className=\"keyboard-key keyboard-key-space\"\n                    onClick={() => handleClick({ type: \"char\", value: \" \" })}\n                ></button>\n                <KeyboardButton onClick={() => handleClick({ type: \"char\", value: \".\" })}>.</KeyboardButton>\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n                <div className=\"keyboard-key keyboard-key-mock\"></div>\n            </div>\n        </div>\n    )\n}","import React, { useMemo, useState, useEffect } from \"react\";\n\nimport \"./style.scss\";\nimport { useTouch } from \"../../../../../shared/hooks\";\nimport { CHAR_HEIGHT, INITIAL_TRANSLATE } from \"./contants\";\n\nexport const Roullete = (props) => {\n  const { layout, onClick, startPos } = props;\n  \n  const {\n    stateTranslateY,\n    stateTransition,\n\n    setStateTranslateY,\n    addTransitionAnimation,\n\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd\n  } = useTouch({ startY: INITIAL_TRANSLATE });\n\n  const [oldY, setOldY] = useState(INITIAL_TRANSLATE);\n\n  useEffect(() => {\n    if (!!startPos) {\n      setStateTranslateY(INITIAL_TRANSLATE - (startPos * CHAR_HEIGHT));\n    } else {\n      setStateTranslateY(INITIAL_TRANSLATE);\n    }\n  }, [])\n\n  const lengthLayoutLent = useMemo(() => (CHAR_HEIGHT * (layout.length - 1)) - INITIAL_TRANSLATE, [layout]);\n\n  const handleDragEnd = () => {\n    if (stateTranslateY > -lengthLayoutLent && stateTranslateY < INITIAL_TRANSLATE) {\n      const diff = (stateTranslateY - INITIAL_TRANSLATE) % CHAR_HEIGHT;\n\n      if (oldY > stateTranslateY) {\n        // Вниз\n        setOldY(stateTranslateY - (diff + INITIAL_TRANSLATE));\n        addTransitionAnimation();\n\n        return setStateTranslateY(stateTranslateY - (diff + CHAR_HEIGHT));\n      } \n\n      if (oldY < stateTranslateY) {\n        // Наверх\n        setOldY(stateTranslateY - diff);\n        addTransitionAnimation();\n        return setStateTranslateY(stateTranslateY - diff);\n      }\n    }\n\n    if (stateTranslateY > INITIAL_TRANSLATE) {\n      setOldY(INITIAL_TRANSLATE);\n      addTransitionAnimation();\n      return setStateTranslateY(INITIAL_TRANSLATE);\n    }\n\n    if (stateTranslateY < -lengthLayoutLent) {\n      setOldY(-lengthLayoutLent);\n      addTransitionAnimation();\n      return setStateTranslateY(-lengthLayoutLent);\n    }\n  }\n\n  const dragStyle = useMemo(() => ({\n    transform: `translateY(${stateTranslateY}px)`,\n    transition : stateTransition ? \"all .3s\" : \"none\"\n  }), [stateTranslateY])\n\n  const handleClick = (keyObj, keyId) => {\n    const currentFocusId = -(stateTranslateY - INITIAL_TRANSLATE) / CHAR_HEIGHT;\n\n    if (keyId === currentFocusId) {\n      onClick(keyObj);\n    }\n  }\n\n  return (\n    <div \n      className=\"roullete\" \n      style={dragStyle}\n      onTouchStart={handleTouchStart()}\n      onTouchMove={handleTouchMove()}\n      onTouchEnd={handleTouchEnd(handleDragEnd)}\n    >\n      {layout.map((keyObj, i) => (\n        <div \n          className=\"roullete-key\" \n          key={`${keyObj.value}-${i}`}\n          onClick={() => handleClick(keyObj, i)}\n        >\n          <span>\n            {keyObj.value}\n          </span>\n        </div>\n      ))}\n    </div>\n  )\n}","import { useState, useCallback } from \"react\";\n\nexport const useTouch = (config) => {\n  let initialConfig = { startX: 0, startY: 0, translateX: 0, translateY: 0, transition: false };\n  if (!!config) initialConfig = { ...initialConfig, ...config };\n  const { startX, startY, translateX, translateY, transition } = initialConfig;\n\n  const [stateStartX, setStateStartX] = useState(startX);\n  const [stateStartY, setStateStartY] = useState(startY);\n  const [stateTranslateX, setStateTranslateX] = useState(translateX);\n  const [stateTranslateY, setStateTranslateY] = useState(translateY);\n  const [stateTransition, setStateTransition] = useState(transition);\n\n  const addTransitionAnimation = useCallback((cb, transX = translateX, transY = translateY, delay = 400) => {\n    const promiseAnimation = new Promise((resolve) => {\n      setStateTransition(true);\n        setStateTranslateY(transY);\n        setStateTranslateX(transX);\n\n        !!cb && cb();\n\n        const timeout = setTimeout(() => {\n            resolve(timeout);\n        }, delay);\n    })\n\n    promiseAnimation\n        .then((timeout) => {\n            clearTimeout(timeout);\n            setStateTransition(false);\n        })\n  }, [])\n\n  const handleTouchStart = useCallback((cb) => (event) => {\n    const { touches } = event;\n    const { clientX, clientY } = touches[0];\n\n    !!cb && cb();\n\n    setStateStartX(clientX);\n    setStateStartY(clientY);\n  }, [setStateStartX, setStateStartY])\n\n  const handleTouchMove = useCallback((cb) => (event) => {\n    const { touches } = event;\n    const { clientX, clientY } = touches[0];\n\n    const diffX = clientX - stateStartX;\n    const diffY = clientY - stateStartY;\n\n    setStateTranslateX(stateTranslateX + diffX);\n    setStateTranslateY(stateTranslateY + diffY);\n\n    !!cb && cb();\n  }, [stateStartX, stateStartY, setStateTranslateX, setStateTranslateY])\n\n  const handleTouchEnd = (cb) => (event) => {\n    !!cb && cb();\n  }\n\n  return {\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd,\n    addTransitionAnimation,\n    \n    setStateTranslateX,\n    setStateTranslateY,\n    setStateTransition,\n\n    stateStartX,\n    stateStartY,\n    stateTranslateX,\n    stateTranslateY,\n    stateTransition\n  }\n}","export const CHAR_HEIGHT = 62; // Высота буквы в пикселях\nexport const INITIAL_TRANSLATE = 84 // Начальное смещение","import React, { useMemo } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./style.scss\";\nimport { Roullete } from \"./components\";\n\n\n\n\nexport const RoulleteKeyboard = (props) => {\n  const { layouts, onChange, value, show } = props;\n\n  // layout = { kyes: [{ value, type: 'char' | 'action', actionType? }, ...], startPos?: Int, }\n\n  const handleChange = (keyObj) => {\n    if (keyObj.type === 'char') {\n      return onChange(value + keyObj.value.replace('_', ' '));\n    }\n\n    if (keyObj.type === \"action\") {\n      const { actionType } = keyObj;\n      \n      // Добавить реализацию для действий\n      switch(actionType) {\n          case 'backSpace':\n              const updatedValue = value.slice(0, value.length - 1);\n              onChange(updatedValue);\n              break;\n          \n          case 'shift':\n              break;\n      }\n\n      return;\n    }\n  }\n\n  const classes = useMemo(() => cn({\n    'roullete-keyboard': true,\n    'roullete-keyboard-show': show\n  }), [show])\n\n  return (\n    <div className={classes}>\n      <div className=\"line line-top\"></div>\n      <div className=\"line line-bottom\"></div>\n      {layouts.map((layout, i) => (\n        <Roullete \n          key={i} \n          layout={layout.keys} \n          onClick={handleChange} \n          startPos={!!layout.startPos ? layout.startPos : 0} \n          \n        />\n      ))}\n    </div>\n  )\n}","import React from \"react\";\n\nimport ShiftSVG from \"./shift.svg\";\nimport BackSpaceSVG from \"./backSpace.svg\";\n\nexport const ShiftIcon = <img src={ShiftSVG} alt=\"shift\" />;\nexport const BackSpaceIcon = <img src={BackSpaceSVG} alt=\"backspace\" />\n","import { ShiftIcon, BackSpaceIcon } from \"../../assets/icons\";\n\nconst DEFAULT= [\n    [\n        { type: \"char\", value: \"й\" }, \n        { type: \"char\", value: \"ц\" }, \n        { type: \"char\", value: \"у\" }, \n        { type: \"char\", value: \"к\" },\n        { type: \"char\", value: \"е\" }, \n        { type: \"char\", value: \"н\" },\n        { type: \"char\", value: \"г\" },\n        { type: \"char\", value: \"ш\" }, \n        { type: \"char\", value: \"щ\" }, \n        { type: \"char\", value: \"з\" }, \n        { type: \"char\", value: \"х\" }\n    ],\n    [\n        { type: \"char\", value: \"ф\" }, \n        { type: \"char\", value: \"ы\" }, \n        { type: \"char\", value: \"в\" }, \n        { type: \"char\", value: \"а\" },\n        { type: \"char\", value: \"п\" }, \n        { type: \"char\", value: \"р\" },\n        { type: \"char\", value: \"о\" },\n        { type: \"char\", value: \"л\" }, \n        { type: \"char\", value: \"д\" }, \n        { type: \"char\", value: \"ж\" }, \n        { type: \"char\", value: \"э\" }\n    ],\n    [\n        { type: \"action\", actionType: \"shift\", value: ShiftIcon }, \n        { type: \"char\", value: \"я\" }, \n        { type: \"char\", value: \"ч\" }, \n        { type: \"char\", value: \"с\" },\n        { type: \"char\", value: \"м\" }, \n        { type: \"char\", value: \"и\" },\n        { type: \"char\", value: \"т\" },\n        { type: \"char\", value: \"ь\" }, \n        { type: \"char\", value: \"б\" }, \n        { type: \"char\", value: \"ю\" }, \n        { type: \"action\", actionType: \"backSpace\", value: BackSpaceIcon }\n    ]\n]\n\nexport const ALPHABET = [\n    {value: 'а', type: 'char'}, {value: 'б', type: 'char'}, {value: 'в', type: 'char'}, {value: 'г', type: 'char'}, \n    {value: 'д', type: 'char'}, {value: 'е', type: 'char'}, {value: 'ё', type: 'char'}, {value: 'ж', type: 'char'}, \n    {value: 'з', type: 'char'}, {value: 'и', type: 'char'}, {value: 'й', type: 'char'}, {value: 'к', type: 'char'}, \n    {value: 'л', type: 'char'}, {value: 'м', type: 'char'}, {value: 'н', type: 'char'}, {value: 'о', type: 'char'},\n    {value: 'п', type: 'char'}, {value: 'р', type: 'char'}, {value: 'с', type: 'char'}, {value: 'т', type: 'char'},\n    {value: 'у', type: 'char'}, {value: 'ф', type: 'char'}, {value: 'х', type: 'char'}, {value: 'ц', type: 'char'},\n    {value: 'ч', type: 'char'}, {value: 'ш', type: 'char'}, {value: 'щ', type: 'char'}, {value: 'ъ', type: 'char'},\n    {value: 'ы', type: 'char'}, {value: 'ь', type: 'char'}, {value: 'э', type: 'char'}, {value: 'ю', type: 'char'},\n    {value: 'я', type: 'char'}\n  ]","export function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const timerSelfDestroy = (delay, cb) => {\n    const timeout = setTimeout(() => {\n        cb();\n        clearTimeout(timeout);\n    }, delay);\n}","import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Group, Header } from \"@vkontakte/vkui\";\n\nimport { PanelRoutingsContext } from \"../../core/context\";\nimport { Keyboard, RoulleteKeyboard } from \"../../core/components\";\nimport { generateLayout } from \"../../core/LayoutsGenerator\";\nimport { PANEL_NAMES } from \"../\";\nimport { GAME_TYPES, MAX_LAYOUTS } from \"../../shared/constants\";\nimport { ALPHABET } from \"../../shared/constants/keyboardLayputs\";\nimport { getRandomInt, timerSelfDestroy } from \"../../shared/utils\";\nimport { BackSpaceIcon } from \"../../assets/icons\";\n\nexport const GameArea = ({ id }) => {\n    const { setActivePanel, params } = useContext(PanelRoutingsContext);\n    const { gameType } = params;\n\n    const [showKeyboard, setShowKeyboard] = useState(true);\n    const [typedText, setTypedText] = useState('');\n    const [typeLayoutId, setTypeLayoutId] = useState(0);\n\n    // for fix timing\n    const [gameTiming, setGameTimnig] = useState(0);\n    \n    const [result, setResult] = useState('');\n\n    const handleBack = () => {\n        setActivePanel(PANEL_NAMES.start);\n    }\n\n    useEffect(() => {\n        const layoutId = getRandomInt(1, MAX_LAYOUTS);\n        setTypeLayoutId(layoutId);\n    }, [])\n\n    useEffect(() => {\n        if (gameType === GAME_TYPES.dinamycRandom) {\n            timerSelfDestroy(1000, () => {\n                if (gameTiming % 2 === 0) {\n                    setTypeLayoutId(getRandomInt(1, MAX_LAYOUTS));\n                }\n                setGameTimnig(gameTiming + 1);\n            });\n        }\n\n        if (gameType === GAME_TYPES.initialRandom) {\n            if (typeLayoutId === 0) {\n                setTypeLayoutId(getRandomInt(1, MAX_LAYOUTS));\n            }\n\n            timerSelfDestroy(1000, () => {\n                setGameTimnig(gameTiming + 1);\n            });\n        }\n\n        if (gameType === GAME_TYPES.roulletKeyboard) {\n            timerSelfDestroy(1000, () => {\n                setGameTimnig(gameTiming + 1);\n            });\n        }\n       \n    }, [gameTiming])\n\n    useEffect(() => {\n        if (typedText === \"привет\" && result.length === 0) {\n            setResult(`Вы написали \"привет\" за ${gameTiming} секунд`)\n            setShowKeyboard(false);\n        }\n    }, [typedText, gameTiming])\n\n    const layout = useMemo(() => generateLayout(typeLayoutId), [typeLayoutId]);\n\n    const resultGroup = useMemo(() => !!result.length && (\n        <Group header={<Header mode=\"secondary\">Результат</Header>}>\n            <Div>{result}</Div>\n        </Group>\n    ), [result.length])\n    \n    const keyboard = useMemo(() => {\n        if (gameType === GAME_TYPES.roulletKeyboard) {\n            return (\n                <RoulleteKeyboard \n                    show={showKeyboard} \n                    onChange={setTypedText} \n                    value={typedText}\n                    layouts={[\n                        { keys: [{value: '_', type: 'char'}] },\n                        { keys: ALPHABET, startPos: getRandomInt(0, ALPHABET.length - 1) },\n                        { keys: ALPHABET, startPos: getRandomInt(0, ALPHABET.length - 1) },\n                        { keys: ALPHABET, startPos: getRandomInt(0, ALPHABET.length - 1) },\n                        { keys: [{ type: \"action\", actionType: \"backSpace\", value: BackSpaceIcon }] },\n                    ]}\n                />\n            )\n        }\n\n        return (\n            <Keyboard \n                onChange={setTypedText} \n                value={typedText}\n                keyboardLayout={layout}\n                show={showKeyboard}\n            />\n        )\n    }, [setTypedText, typedText, layout, showKeyboard, gameType])\n\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<PanelHeaderBack onClick={handleBack} />}\n            >Игра</PanelHeader>\n            \n            <Group header={<Header mode=\"secondary\">Напишите \"привет\"</Header>}>\n                <Div>{typedText}</Div>\n            </Group>\n\n            {resultGroup}\n            \n            {keyboard}\n        </Panel>\n    )\n}","import React from \"react\";\n\nimport { ShiftIcon, BackSpaceIcon } from \"../../assets/icons\";\n\nexport const generateLayout = (layoutTypeId) => {\n    const DEFAULT_LAYOUT = [\n        [\n            { type: \"char\", value: \"й\" }, \n            { type: \"char\", value: \"ц\" }, \n            { type: \"char\", value: \"у\" }, \n            { type: \"char\", value: \"к\" },\n            { type: \"char\", value: \"е\" }, \n            { type: \"char\", value: \"н\" },\n            { type: \"char\", value: \"г\" },\n            { type: \"char\", value: \"ш\" }, \n            { type: \"char\", value: \"щ\" }, \n            { type: \"char\", value: \"з\" }, \n            { type: \"char\", value: \"х\" }\n        ],\n        [\n            { type: \"char\", value: \"ф\" }, \n            { type: \"char\", value: \"ы\" }, \n            { type: \"char\", value: \"в\" }, \n            { type: \"char\", value: \"а\" },\n            { type: \"char\", value: \"п\" }, \n            { type: \"char\", value: \"р\" },\n            { type: \"char\", value: \"о\" },\n            { type: \"char\", value: \"л\" }, \n            { type: \"char\", value: \"д\" }, \n            { type: \"char\", value: \"ж\" }, \n            { type: \"char\", value: \"э\" }\n        ],\n        [\n            { type: \"action\", actionType: \"shift\", value: ShiftIcon }, \n            { type: \"char\", value: \"я\" }, \n            { type: \"char\", value: \"ч\" }, \n            { type: \"char\", value: \"с\" },\n            { type: \"char\", value: \"м\" }, \n            { type: \"char\", value: \"и\" },\n            { type: \"char\", value: \"т\" },\n            { type: \"char\", value: \"ь\" }, \n            { type: \"char\", value: \"б\" }, \n            { type: \"char\", value: \"ю\" }, \n            { type: \"action\", actionType: \"backSpace\", value: BackSpaceIcon }\n        ]\n    ]\n\n    if (layoutTypeId === 0) {\n        return DEFAULT_LAYOUT;\n    }\n\n    if (layoutTypeId === 1) {\n        return DEFAULT_LAYOUT.reverse();\n    } \n\n    if (layoutTypeId === 2) {\n        return DEFAULT_LAYOUT.map((row) => row.reverse()).reverse();\n    }\n\n    if (layoutTypeId === 3) {\n        const firstRow = DEFAULT_LAYOUT[0];\n        const secondRow = DEFAULT_LAYOUT[1];\n        const thridRow = DEFAULT_LAYOUT[2];\n\n        return [secondRow, thridRow, firstRow];\n    }\n\n    if (layoutTypeId === 4) {\n        const firstRow = DEFAULT_LAYOUT[0];\n        const secondRow = DEFAULT_LAYOUT[1];\n        const thridRow = DEFAULT_LAYOUT[2];\n\n        return [secondRow.reverse(), thridRow, firstRow.reverse()];\n    }\n\n    if (layoutTypeId === 5) {\n        const firstRow = DEFAULT_LAYOUT[0];\n        const secondRow = DEFAULT_LAYOUT[1];\n        const thridRow = DEFAULT_LAYOUT[2];\n\n        return [\n            [...firstRow.splice(0, 6), ...thridRow.splice(6, thridRow.length)],\n            [...thridRow, ...firstRow],\n            secondRow\n        ];\n    }\n}\n","export { Start } from \"./Start\";\nexport { GameArea } from \"./GameArea\";\n\nexport const PANEL_NAMES = {\n    start: 'start',\n    gameArea: 'gameArea'\n}","import React, { useContext, useEffect } from \"react\";\nimport { PanelHeader, Panel, View } from \"@vkontakte/vkui\"\n\nimport { PanelRoutingsProvider, PanelRoutingsContext } from \"../core/context\";\nimport { Start, GameArea, PANEL_NAMES } from \"../panels\";\n\nconst Routing = () => {\n    const { activePanel } = useContext(PanelRoutingsContext);\n\n    return (\n        <View activePanel={activePanel}>\n            <Start id={PANEL_NAMES.start} />\n            <GameArea id={PANEL_NAMES.gameArea} />\n        </View>\n    )\n}\n\nexport const RoutingWithProviders = () => (\n    <PanelRoutingsProvider>\n        <Routing />\n    </PanelRoutingsProvider>\n)","import React from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport { RoutingWithProviders } from \"./routing\";\n\nconst App = () => <RoutingWithProviders />\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/shift.bd2e35ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/backSpace.b50f4f19.svg\";"],"sourceRoot":""}